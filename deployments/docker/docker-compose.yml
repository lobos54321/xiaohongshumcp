version: '3.8'

services:
  # 代理服务
  xiaohongshu-proxy:
    build: .
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=production
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password123
      - DB_NAME=xiaohongshu_proxy
      - REDIS_HOST=redis
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MCP_BASE_URL=http://xiaohongshu-mcp:18060/mcp
    depends_on:
      - postgres
      - redis
      - xiaohongshu-mcp
    volumes:
      - ./data/logs:/app/logs
    networks:
      - xiaohongshu-net
    restart: unless-stopped

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=xiaohongshu_proxy
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - xiaohongshu-net
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - xiaohongshu-net
    restart: unless-stopped

  # 小红书 MCP 服务
  xiaohongshu-mcp:
    image: xpzouying/xiaohongshu-mcp:latest
    ports:
      - "18060:18060"
    volumes:
      - ./data/xiaohongshu:/app/data
      - ./data/images:/app/images
    environment:
      - HEADLESS=true
    networks:
      - xiaohongshu-net
    restart: unless-stopped

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployments/docker/nginx.conf:/etc/nginx/nginx.conf
      - ./deployments/docker/ssl:/etc/ssl/certs
    depends_on:
      - xiaohongshu-proxy
    networks:
      - xiaohongshu-net
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  xiaohongshu-net:
    driver: bridge